// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user { //bảng user
  id_user Int @id   @default(autoincrement())
  user_name String
  pass_word String  
  is_librian Boolean @default(false)
  reader reader?
  marked_document marked_document[]
  is_valid Boolean @default(true)
  @@map("users")
}
model major{    //bảng khoa
    id_major Int @id    @default(autoincrement())
    major_name String
    reader reader[]
    document document[]

    @@map("majors")
}

model job_title{    //bảng chức danh: giáo viên, sinh viên
    id_job_title Int @id @default(autoincrement())
    job_title_name  String
    reader reader[]
    @@map("jobs_titles")
}

model reader{   //bảng độc giả
    id_reader Int @id   @default(autoincrement())
    name    String
    birth_date  DateTime
    phone_number    String?
    gender     Boolean    @default(true)  //Male:true , female:false
    avatar      String?                                
    id_job_title    Int
    id_user    Int      @unique
    id_major    Int
    user user @relation(fields:[id_user],references:[id_user]) //1-1   declare one time in optional model
    job_title job_title @relation(fields:[id_job_title],references:[id_job_title])
    major major @relation(fields:[id_major],references:[id_major]) //n-1 declare one time in n-model
    loan_return_transaction loan_return_transaction[]
    @@map("readers")
}

model category{ //bảng phân loại
    id_category Int @id @default(autoincrement())
    category_name   String
    document document[]
    @@map("categories")
}

model author{ //bảng tác giả
    id_author   Int @id @default(autoincrement())
    author_name String 
    document document[]
    @@map("authors")
}

model publisher{    //bảng nhà xuất bản
    id_publisher    Int     @id @default(autoincrement())
    publisher_name  String
    document document[]
    @@map("publishers")
}

model document{     //bảng tài liệu
    id_document     Int @id @default(autoincrement())
    document_name   String
    published_year    Int
    quantity    Int
    id_major    Int
    id_author   Int
    id_publisher    Int
    id_category     Int
    description String
    image       String
    status      String
    major major @relation(fields:[id_major],references:[id_major])
    author author @relation(fields: [id_author], references: [id_author])
    publisher publisher @relation(fields: [id_publisher], references: [id_publisher])
    category category   @relation(fields: [id_category], references: [id_category])
    purchase document_purchase[]
    loan_return_transaction loan_return_transaction[]
    loan_request_list_document loan_request_list_document[]

    @@map("documents")
}

model supplier{     //bảng nhà cung cấp
    id_supplier Int @id @default(autoincrement())
    supplier_name   Int
    purchase document_purchase[]
    @@map("suppliers")
}

model document_purchase{    //bảng nhập tài liệu
    id_purchase Int @id @default(autoincrement())
    id_document     Int
    id_supplier Int
    purchase_date   DateTime
    quantity    Int
    supplier supplier @relation(fields:[id_supplier],references:[id_supplier])
    document document @relation(fields:[id_document],references:[id_document])
    @@map("document_puchases")
}

model loan_request{     //bảng phiếu mượn
    id_loan_request  Int @id @default(autoincrement())
    id_document     Int
    loan_date DateTime
    due_date    DateTime
    loan_return_transaction loan_return_transaction[]
    @@map("loan_requests")
}

model loan_request_list_document{   //bảng danh sách tài liệu mượn
    id Int @id @default(autoincrement())
    id_loan_request  Int
    quantity    Int         
    id_document Int     
    document document @relation(fields:[id_document],references:[id_document])
    @@map("loan_request_list_documents")
}
model punishment{   //bảng xử phạt
    id_punish   Int @id @default(autoincrement())
    reason String
    is_handled Boolean @default(false)
    loan_return_transaction loan_return_transaction[]
    @@map("punishments")
}

model loan_return_transaction{  //bảng mượn trả
    id_loan_return    Int @id @default(autoincrement())
    id_loan_request     Int
    id_reader   Int
    id_document     Int
    id_punish   Int?
    return_date DateTime
    return_status   String
    document document @relation(fields:[id_document],references:[id_document])
    punishment punishment? @relation(fields:[id_punish],references:[id_punish])
    reader reader @relation(fields: [id_reader], references: [id_reader])
    loan_request loan_request @relation(fields: [id_loan_request], references: [id_loan_request])

    @@map("loan_return_transactions")
}
model marked_document{  //bảng tài liệu được đánh dấu
    id Int @id @default(autoincrement())
    id_user Int 
    id_document Int
    user user @relation(fields: [id_user],references: [id_user])

    @@map("marked_documents")
}

model media{  //bảng mượn trả
    id    Int @id @default(autoincrement())
    key   String
}